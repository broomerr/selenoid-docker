---
# - name: Selenoid | Install certain python modules for docker
#   pip:
#     name: "{{ item.name }}"
#   with_items:
#   - { name: docker }

- name: Selenoid | Install certain python modules for docker
  become: True
  package:
    name: "{{ item.name }}"
  with_items:
    - { name: python-docker-py }
  when:
    - (ansible_distribution == "OracleLinux" or ansible_distribution == "CentOS")
    - ansible_os_family == "RedHat"

- name: Selenoid | Install certain python modules for docker
  become: True
  package:
    name: "{{ item.name }}"
  with_items:
    - { name: python-docker }
  when:
    - ansible_os_family == "Debian"


- name: Selenoid | Check selenoid container exist
  shell: "docker ps -aq --filter \"name=^{{ item }}$\""
  with_items:
    - 'selenoid'
    - 'selenoid-ui'
  register: found_containers

- name: Selenoid | Remove selenoid container if exist
  shell: 'docker stop {{ item.item }} && docker rm -fv {{ item.item }}'
  with_items: '{{ found_containers.results }}'
  when: item.stdout

- name: Selenoid | Create video folder
  file:
    path: "{{ selenoid_video_host_output_dir }}"
    state: directory
    mode: 0755

- name: Selenoid | Run CM container, download browser images and run selenoid
  docker_container:
    name: cm
    image: "aerokube/cm:{{ selenoid_cm_version }}"
    # auto_remove: yes
    # Need to remove CM container before next invocation.....
    # But this command run for long time to download containers
    cleanup: yes
    detach: no
    volumes:
    - "/var/run/docker.sock:/var/run/docker.sock"
    - "{{ selenoid_config_dir }}:/root"
    - "{{ selenoid_video_host_output_dir }}:{{ selenoid_video_container_output_dir }}"
    env:
      TZ: "{{ selenoid_time_zone }}"
      OVERRIDE_HOME: "{{ selenoid_config_dir }}"
    command: >
      selenoid start
        --config-dir {{ selenoid_config_dir }}
        --version {{ selenoid_version }}
        --tmpfs {{ selenoid_tmpfs }}
        --browsers {% for browser in selenoid_browsers -%}{{ browser }}{%- if not loop.last -%},{%- endif -%}{%- endfor %}
        --last-versions {{ selenoid_browsers_last_versions }}
        --force
        --vnc
        --args "-limit {{ selenoid_limit }} -listen :{{ selenoid_listen_port }} -video-output-dir={{ selenoid_video_container_output_dir }} -conf /etc/selenoid/browsers.json"
  register: reg_cm_solenoid

- name: Print some debug information
  vars:
    msg: |
        reg_cm_solenoid: {{ reg_cm_solenoid }}
  debug:
    msg: "{{ msg.split('\n') }}"
  tags: debug_info


- name: Selenoid | Run CM selenoid-ui
  docker_container:
    name: cm
    # auto_remove: yes
    cleanup: yes
    detach: no
    image: "aerokube/cm:{{ selenoid_cm_version }}"
    volumes:
    - "/var/run/docker.sock:/var/run/docker.sock"
    - "{{ selenoid_config_dir }}:/root"
    env:
      TZ: "{{ selenoid_time_zone }}"
      OVERRIDE_HOME: "{{ selenoid_config_dir }}"
      # DOCKER_API_VERSION: "{{ selenoid_docker_api_version | string }}"
#       --args "--selenoid-uri http://selenoid:{{ selenoid_listen_port }} --webdriver-uri http://{{selenoid_host_external}}:{{ selenoid_listen_port }}"
    command: >
      selenoid-ui start
  register: reg_cm_solenoidui

- name: Print some debug information
  vars:
    msg: |
        Ansible Distribution: {{ ansible_distribution }}
        Ansible Dist version: {{ ansible_distribution_version }}
        Ansible OS family {{ansible_os_family}}
        reg_cm_solenoidui: {{ reg_cm_solenoidui }}
  debug:
    msg: "{{ msg.split('\n') }}"
  tags: debug_info
